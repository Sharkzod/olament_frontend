'use client'
import React, { useState } from 'react';
import { 
  Wallet, 
  ShoppingCart, 
  Package, 
  Truck, 
  MapPin, 
  Bell, 
  User, 
  Search,
  Plus,
  Eye,
  Clock,
  CheckCircle,
  AlertCircle,
  Home,
  Store,
  CreditCard,
  Settings,
  LogOut,
  Menu,
  X,
  Star,
  ArrowRight
} from 'lucide-react';

const Dashboard = () => {
  const [activeTab, setActiveTab] = useState('overview');
  const [isSidebarOpen, setIsSidebarOpen] = useState(false);
  
  // Mock data
  const userData = {
    name: "Adebayo Johnson",
    walletBalance: 45750,
    pendingOrders: 3,
    completedOrders: 12,
    location: "Lagos, VI Products"
  };

  const pendingTransactions = [
    { id: 1, shop: "Mama Kemi's Store", amount: 5000, status: "awaiting_delivery", orderId: "OL001" },
    { id: 2, shop: "Village Market Hub", amount: 3000, status: "awaiting_delivery", orderId: "OL002" },
    { id: 3, shop: "Fresh Foods Corner", amount: 2500, status: "in_transit", orderId: "OL003" }
  ];

  const recentOrders = [
    { id: 1, shop: "Mama Ngozi's Shop", amount: 8500, status: "delivered", date: "2024-09-08", items: "Rice, Oil, Tomatoes" },
    { id: 2, shop: "City Fashion Store", amount: 12000, status: "delivered", date: "2024-09-06", items: "Ankara Fabric, Shoes" },
    { id: 3, shop: "Home Essentials", amount: 6500, status: "delivered", date: "2024-09-05", items: "Detergent, Soap, Towels" }
  ];

  const nearbyMarkets = [
    { 
      name: "Balogun", 
      distance: "3 km", 
      shops: 150,
      image: "🏪",
      rating: 4.2,
      deliveryTime: "25-40 min"
    },
    { 
      name: "Mile 12", 
      distance: "1 km", 
      shops: 200,
      image: "🛒",
      rating: 4.5,
      deliveryTime: "15-30 min"
    },
    { 
      name: "Computer Village", 
      distance: "5.8 km", 
      shops: 300,
      image: "💻",
      rating: 4.3,
      deliveryTime: "35-50 min"
    }
  ];

  const featuredShops = [
    {
      id: 1,
      name: "Mama Kudi Foods",
      market: "Balogun",
      stall: "Stall E-19",
      rating: 3.5,
      deliveryTime: "30-45 min",
      waitTime: "93-48 min",
      image: "🍚"
    },
    {
      id: 2,
      name: "Chinedu Electronics", 
      market: "Mile 12",
      stall: "Stall A-3",
      rating: 4.0,
      deliveryTime: "30-45 min",
      waitTime: "99-46 min",
      image: "📱"
    }
  ];

  const menuItems = [
    { id: 'overview', icon: Home, label: 'Home' },
    { id: 'cart', icon: ShoppingCart, label: 'Cart' },
    { id: 'orders', icon: Package, label: 'Orders' },
    { id: 'profile', icon: User, label: 'Profile' }
  ];

  const desktopMenuItems = [
    { id: 'overview', icon: Home, label: 'Overview' },
    { id: 'wallet', icon: Wallet, label: 'My Wallet' },
    { id: 'orders', icon: Package, label: 'My Orders' },
    { id: 'markets', icon: Store, label: 'Markets' },
    { id: 'profile', icon: User, label: 'Profile' },
    { id: 'settings', icon: Settings, label: 'Settings' }
  ];

  const StatusBadge = ({ status }) => {
    const statusConfig = {
      awaiting_delivery: { bg: 'bg-yellow-900', text: 'text-yellow-400', label: 'Awaiting Delivery' },
      in_transit: { bg: 'bg-blue-900', text: 'text-blue-400', label: 'In Transit' },
      delivered: { bg: 'bg-green-900', text: 'text-green-400', label: 'Delivered' }
    };
    
    const config = statusConfig[status] || statusConfig.awaiting_delivery;
    
    return (
      <span className={`px-2 py-1 rounded-full text-xs font-medium ${config.bg} ${config.text}`}>
        {config.label}
      </span>
    );
  };

  const StarRating = ({ rating }) => {
    return (
      <div className="flex items-center space-x-1">
        {[1, 2, 3, 4, 5].map((star) => (
          <Star 
            key={star} 
            className={`h-3 w-3 ${star <= rating ? 'text-yellow-400 fill-current' : 'text-gray-500'}`} 
          />
        ))}
        <span className="text-xs text-gray-400 ml-1">{rating}</span>
      </div>
    );
  };

  // Desktop Sidebar
  const Sidebar = () => (
    <div className={`fixed inset-y-0 left-0 z-50 w-64 bg-gray-800 transform ${isSidebarOpen ? 'translate-x-0' : '-translate-x-full'} transition-transform duration-300 ease-in-out lg:translate-x-0 lg:static`}>
      <div className="flex items-center justify-between p-6 border-b border-gray-700">
        <h1 className="text-2xl font-bold text-yellow-400">Olament</h1>
        <button 
          onClick={() => setIsSidebarOpen(false)}
          className="lg:hidden text-gray-400 hover:text-white"
        >
          <X className="h-6 w-6" />
        </button>
      </div>
      
      <nav className="mt-6 px-4">
        {desktopMenuItems.map((item) => {
          const Icon = item.icon;
          return (
            <button
              key={item.id}
              onClick={() => {
                setActiveTab(item.id);
                setIsSidebarOpen(false);
              }}
              className={`w-full flex items-center px-4 py-3 text-left rounded-lg mb-2 transition-colors ${
                activeTab === item.id 
                  ? 'bg-yellow-400 text-gray-900' 
                  : 'text-gray-300 hover:bg-gray-700 hover:text-white'
              }`}
            >
              <Icon className="h-5 w-5 mr-3" />
              {item.label}
            </button>
          );
        })}
      </nav>
      
      <div className="absolute bottom-4 left-4 right-4">
        <button className="w-full flex items-center px-4 py-3 text-gray-300 hover:bg-gray-700 hover:text-white rounded-lg transition-colors">
          <LogOut className="h-5 w-5 mr-3" />
          Logout
        </button>
      </div>
    </div>
  );

  // Mobile Bottom Navigation
  const BottomNav = () => (
    <div className="lg:hidden fixed bottom-0 left-0 right-0 bg-gray-800 border-t border-gray-700 px-4 py-2">
      <div className="flex items-center justify-around">
        {menuItems.map((item) => {
          const Icon = item.icon;
          return (
            <button
              key={item.id}
              onClick={() => setActiveTab(item.id)}
              className={`flex flex-col items-center p-2 rounded-lg transition-colors ${
                activeTab === item.id 
                  ? 'text-yellow-400' 
                  : 'text-gray-400'
              }`}
            >
              <Icon className="h-5 w-5 mb-1" />
              <span className="text-xs">{item.label}</span>
            </button>
          );
        })}
      </div>
    </div>
  );

  const MobileOverviewTab = () => (
    <div className="space-y-4 pb-20">
      {/* Header */}
      <div className="flex items-center justify-between">
        <div>
          <p className="text-gray-400 text-sm">LAGOS, VI PRODUCTS</p>
          <h1 className="text-xl font-bold text-white">Good evening, Adebayo!</h1>
        </div>
        <div className="w-10 h-10 bg-yellow-400 rounded-full flex items-center justify-center">
          <User className="h-6 w-6 text-gray-900" />
        </div>
      </div>

      {/* Search Bar */}
      <div className="relative">
        <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
        <input 
          type="text"
          placeholder="Search for shops or products..."
          className="w-full pl-10 pr-4 py-3 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400"
        />
      </div>

      {/* Wallet Balance Card */}
      <div className="bg-gradient-to-r from-yellow-600 to-yellow-500 rounded-lg p-4">
        <div className="flex items-center justify-between">
          <div>
            <p className="text-gray-900 text-sm opacity-80">Wallet Balance</p>
            <p className="text-2xl font-bold text-gray-900">₦{userData.walletBalance.toLocaleString()}</p>
          </div>
          <Wallet className="h-8 w-8 text-gray-900 opacity-80" />
        </div>
        <button className="mt-3 bg-gray-900 text-yellow-400 px-4 py-2 rounded-lg text-sm font-medium">
          Add Money
        </button>
      </div>

      {/* Markets Near You */}
      <div>
        <h2 className="text-lg font-bold text-yellow-400 mb-3">MARKETS NEAR YOU</h2>
        <div className="flex space-x-3 overflow-x-auto pb-2">
          {nearbyMarkets.map((market, index) => (
            <div key={index} className="flex-shrink-0 w-32 bg-gray-800 rounded-lg overflow-hidden">
              <div className="h-20 bg-gradient-to-br from-gray-700 to-gray-600 flex items-center justify-center text-2xl">
                {market.image}
              </div>
              <div className="p-3">
                <h3 className="font-medium text-white text-sm">{market.name}</h3>
                <p className="text-xs text-gray-400">{market.distance}</p>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Featured Shops */}
      <div>
        <h2 className="text-lg font-bold text-yellow-400 mb-3">FEATURED SHOPS</h2>
        <div className="space-y-3">
          {featuredShops.map((shop) => (
            <div key={shop.id} className="bg-gray-800 rounded-lg p-4">
              <div className="flex items-start space-x-3">
                <div className="w-12 h-12 bg-gray-700 rounded-lg flex items-center justify-center text-xl">
                  {shop.image}
                </div>
                <div className="flex-1">
                  <div className="flex items-center justify-between mb-1">
                    <h3 className="font-medium text-white">{shop.name}</h3>
                    <ArrowRight className="h-4 w-4 text-gray-400" />
                  </div>
                  <StarRating rating={shop.rating} />
                  <div className="mt-2 flex items-center justify-between text-xs text-gray-400">
                    <span>{shop.market} • {shop.stall}</span>
                    <span>{shop.deliveryTime}</span>
                  </div>
                  <div className="text-xs text-gray-400">
                    {shop.waitTime}
                  </div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Quick Actions */}
      <div className="grid grid-cols-2 gap-3">
        <button className="bg-gray-800 border border-gray-700 rounded-lg p-4 text-left">
          <Package className="h-6 w-6 text-yellow-400 mb-2" />
          <p className="font-medium text-white">My Orders</p>
          <p className="text-sm text-gray-400">{userData.pendingOrders} pending</p>
        </button>
        <button className="bg-gray-800 border border-gray-700 rounded-lg p-4 text-left">
          <Store className="h-6 w-6 text-yellow-400 mb-2" />
          <p className="font-medium text-white">Browse Markets</p>
          <p className="text-sm text-gray-400">Find nearby shops</p>
        </button>
      </div>
    </div>
  );

  const DesktopOverviewTab = () => (
    <div className="space-y-6">
      {/* Welcome Section */}
      <div className="bg-gradient-to-r from-yellow-600 to-yellow-500 rounded-lg p-6 text-gray-900">
        <h2 className="text-2xl font-bold mb-2">Welcome back, {userData.name}!</h2>
        <p className="opacity-90">Digitizing Africa's Local Markets - Your trusted marketplace</p>
      </div>

      {/* Stats Cards */}
      <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
        <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-400 text-sm">Wallet Balance</p>
              <p className="text-2xl font-bold text-white">₦{userData.walletBalance.toLocaleString()}</p>
            </div>
            <Wallet className="h-8 w-8 text-yellow-400" />
          </div>
        </div>
        
        <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-400 text-sm">Pending Orders</p>
              <p className="text-2xl font-bold text-white">{userData.pendingOrders}</p>
            </div>
            <Clock className="h-8 w-8 text-blue-400" />
          </div>
        </div>
        
        <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
          <div className="flex items-center justify-between">
            <div>
              <p className="text-gray-400 text-sm">Completed Orders</p>
              <p className="text-2xl font-bold text-white">{userData.completedOrders}</p>
            </div>
            <CheckCircle className="h-8 w-8 text-green-400" />
          </div>
        </div>
      </div>

      {/* Markets and Featured Shops Grid */}
      <div className="grid grid-cols-1 xl:grid-cols-2 gap-6">
        {/* Markets Near You */}
        <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
          <h3 className="text-lg font-bold text-yellow-400 mb-4">MARKETS NEAR YOU</h3>
          <div className="grid grid-cols-2 gap-4">
            {nearbyMarkets.slice(0, 4).map((market, index) => (
              <div key={index} className="bg-gray-700 rounded-lg overflow-hidden hover:bg-gray-600 transition-colors cursor-pointer">
                <div className="h-16 bg-gradient-to-br from-gray-600 to-gray-500 flex items-center justify-center text-2xl">
                  {market.image}
                </div>
                <div className="p-3">
                  <h4 className="font-medium text-white text-sm">{market.name}</h4>
                  <p className="text-xs text-gray-400">{market.distance}</p>
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* Featured Shops */}
        <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
          <h3 className="text-lg font-bold text-yellow-400 mb-4">FEATURED SHOPS</h3>
          <div className="space-y-4">
            {featuredShops.map((shop) => (
              <div key={shop.id} className="bg-gray-700 rounded-lg p-4 hover:bg-gray-600 transition-colors cursor-pointer">
                <div className="flex items-start space-x-3">
                  <div className="w-10 h-10 bg-gray-600 rounded-lg flex items-center justify-center text-lg">
                    {shop.image}
                  </div>
                  <div className="flex-1">
                    <div className="flex items-center justify-between mb-1">
                      <h4 className="font-medium text-white text-sm">{shop.name}</h4>
                      <ArrowRight className="h-4 w-4 text-gray-400" />
                    </div>
                    <StarRating rating={shop.rating} />
                    <div className="mt-1 flex items-center justify-between text-xs text-gray-400">
                      <span>{shop.market} • {shop.stall}</span>
                      <span>{shop.deliveryTime}</span>
                    </div>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </div>
      </div>

      {/* Pending Transactions */}
      <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
        <div className="flex items-center justify-between mb-4">
          <h3 className="text-lg font-semibold text-white">Pending Transactions</h3>
          <AlertCircle className="h-5 w-5 text-yellow-400" />
        </div>
        <div className="space-y-4">
          {pendingTransactions.map((transaction) => (
            <div key={transaction.id} className="flex items-center justify-between p-4 bg-gray-700 rounded-lg">
              <div className="flex items-center space-x-4">
                <Store className="h-8 w-8 text-gray-400" />
                <div>
                  <p className="font-medium text-white">{transaction.shop}</p>
                  <p className="text-sm text-gray-400">Order #{transaction.orderId}</p>
                </div>
              </div>
              <div className="text-right">
                <p className="font-semibold text-white">₦{transaction.amount.toLocaleString()}</p>
                <StatusBadge status={transaction.status} />
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const WalletTab = () => (
    <div className="space-y-6 pb-20 lg:pb-0">
      <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
        <div className="text-center mb-6">
          <h2 className="text-2xl font-semibold text-white mb-2">Olament Wallet</h2>
          <div className="text-4xl font-bold text-yellow-400 mb-4">₦{userData.walletBalance.toLocaleString()}</div>
          <div className="flex justify-center space-x-4">
            <button className="bg-yellow-400 text-gray-900 px-6 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors">
              Add Money
            </button>
            <button className="border border-gray-600 text-white px-6 py-2 rounded-lg hover:bg-gray-700 transition-colors">
              Send Money
            </button>
          </div>
        </div>
        
        <div className="border-t border-gray-700 pt-6">
          <h3 className="text-lg font-semibold text-white mb-4">Recent Transactions</h3>
          <div className="space-y-3">
            {pendingTransactions.map((transaction) => (
              <div key={transaction.id} className="flex items-center justify-between p-3 bg-gray-700 rounded-lg">
                <div className="flex items-center space-x-3">
                  <div className="w-2 h-2 bg-yellow-400 rounded-full"></div>
                  <div>
                    <p className="font-medium text-white">{transaction.shop}</p>
                    <p className="text-sm text-gray-400">Locked in Escrow</p>
                  </div>
                </div>
                <p className="font-semibold text-yellow-400">-₦{transaction.amount.toLocaleString()}</p>
              </div>
            ))}
          </div>
        </div>
      </div>
    </div>
  );

  const OrdersTab = () => (
    <div className="space-y-6 pb-20 lg:pb-0">
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-semibold text-white">My Orders</h2>
        <button className="bg-yellow-400 text-gray-900 px-4 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors flex items-center">
          <Plus className="h-4 w-4 mr-2" />
          New Order
        </button>
      </div>

      <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
        <h3 className="text-lg font-semibold text-white mb-4">Recent Orders</h3>
        <div className="space-y-4">
          {recentOrders.map((order) => (
            <div key={order.id} className="p-4 bg-gray-700 rounded-lg">
              <div className="flex items-center justify-between mb-2">
                <div className="flex items-center space-x-3">
                  <Package className="h-5 w-5 text-gray-400" />
                  <div>
                    <p className="font-medium text-white">{order.shop}</p>
                    <p className="text-sm text-gray-400">{order.date}</p>
                  </div>
                </div>
                <div className="text-right">
                  <p className="font-semibold text-white">₦{order.amount.toLocaleString()}</p>
                  <StatusBadge status={order.status} />
                </div>
              </div>
              <p className="text-sm text-gray-400 mt-2">{order.items}</p>
              <div className="flex justify-end mt-3">
                <button className="text-yellow-400 hover:text-yellow-300 text-sm flex items-center">
                  <Eye className="h-4 w-4 mr-1" />
                  View Details
                </button>
              </div>
            </div>
          ))}
        </div>
      </div>
    </div>
  );

  const MarketsTab = () => (
    <div className="space-y-6 pb-20 lg:pb-0">
      <div className="flex items-center justify-between">
        <h2 className="text-2xl font-semibold text-white">Explore Markets</h2>
        <div className="relative">
          <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-gray-400" />
          <input 
            type="text"
            placeholder="Search markets..."
            className="pl-10 pr-4 py-2 bg-gray-800 border border-gray-700 rounded-lg text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-yellow-400"
          />
        </div>
      </div>

      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
        {nearbyMarkets.map((market, index) => (
          <div key={index} className="bg-gray-800 border border-gray-700 rounded-lg overflow-hidden hover:border-yellow-400 transition-colors cursor-pointer">
            <div className="h-32 bg-gradient-to-br from-gray-700 to-gray-600 flex items-center justify-center text-4xl">
              {market.image}
            </div>
            <div className="p-4">
              <h3 className="font-semibold text-white mb-1">{market.name}</h3>
              <p className="text-sm text-gray-400 mb-2">{market.distance} away</p>
              <StarRating rating={market.rating} />
              <p className="text-gray-300 mt-2 mb-4">{market.shops} shops available</p>
              <button className="w-full bg-yellow-400 text-gray-900 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors">
                Browse Shops
              </button>
            </div>
          </div>
        ))}
      </div>
    </div>
  );

  const CartTab = () => (
    <div className="space-y-6 pb-20 lg:pb-0">
      <h2 className="text-2xl font-semibold text-white">Shopping Cart</h2>
      <div className="bg-gray-800 border border-gray-700 rounded-lg p-6 text-center">
        <ShoppingCart className="h-16 w-16 text-gray-600 mx-auto mb-4" />
        <p className="text-gray-400 mb-4">Your cart is empty</p>
        <button className="bg-yellow-400 text-gray-900 px-6 py-2 rounded-lg font-medium hover:bg-yellow-300 transition-colors">
          Start Shopping
        </button>
      </div>
    </div>
  );

  const ProfileTab = () => (
    <div className="space-y-6 pb-20 lg:pb-0">
      <h2 className="text-2xl font-semibold text-white">Profile</h2>
      <div className="bg-gray-800 border border-gray-700 rounded-lg p-6">
        <div className="flex items-center space-x-4 mb-6">
          <div className="w-16 h-16 bg-yellow-400 rounded-full flex items-center justify-center">
            <User className="h-8 w-8 text-gray-900" />
          </div>
          <div>
            <h3 className="text-xl font-semibold text-white">{userData.name}</h3>
            <p className="text-gray-400">{userData.location}</p>
          </div>
        </div>
        <div className="space-y-4">
          <button className="w-full flex items-center justify-between p-3 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors">
            <div className="flex items-center space-x-3">
              <Settings className="h-5 w-5 text-gray-400" />
              <span className="text-white">Account Settings</span>
            </div>
            <ArrowRight className="h-4 w-4 text-gray-400" />
          </button>
          <button className="w-full flex items-center justify-between p-3 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors">
            <div className="flex items-center space-x-3">
              <Bell className="h-5 w-5 text-gray-400" />
              <span className="text-white">Notifications</span>
            </div>
            <ArrowRight className="h-4 w-4 text-gray-400" />
          </button>
          <button className="w-full flex items-center justify-between p-3 bg-gray-700 rounded-lg hover:bg-gray-600 transition-colors">
            <div className="flex items-center space-x-3">
              <MapPin className="h-5 w-5 text-gray-400" />
              <span className="text-white">Delivery Address</span>
            </div>
            <ArrowRight className="h-4 w-4 text-gray-400" />
          </button>
        </div>
      </div>
    </div>
  );

  const renderTabContent = () => {
    switch (activeTab) {
      case 'overview': 
        return (
          <div className="lg:hidden">
            <MobileOverviewTab />
          </div>
        );
      case 'cart': return <CartTab />;
      case 'wallet': return <WalletTab />;
      case 'orders': return <OrdersTab />;
      case 'markets': return <MarketsTab />;
      case 'profile': return <ProfileTab />;
      case 'settings': return <div className="text-white pb-20 lg:pb-0">Settings content coming soon...</div>;
      default: return (
        <>
          <div className="lg:hidden">
            <MobileOverviewTab />
          </div>
          <div className="hidden lg:block">
            <DesktopOverviewTab />
          </div>
        </>
      );
    }
  };

  return (
    <div className="min-h-screen bg-gray-900">
      {/* Desktop Layout */}
      <div className="hidden lg:flex">
        <Sidebar />
        
        {/* Overlay for mobile */}
        {isSidebarOpen && (
          <div 
            className="fixed inset-0 z-40 bg-black bg-opacity-50 lg:hidden" 
            onClick={() => setIsSidebarOpen(false)}
          />
        )}
        
        <div className="flex-1 lg:ml-0">
          {/* Header */}
          <header className="bg-gray-800 border-b border-gray-700 px-6 py-4">
            <div className="flex items-center justify-between">
              <button 
                onClick={() => setIsSidebarOpen(true)}
                className="lg:hidden text-gray-400 hover:text-white"
              >
                <Menu className="h-6 w-6" />
              </button>
              
              <div className="flex items-center space-x-4">
                <button className="relative p-2 text-gray-400 hover:text-white">
                  <Bell className="h-6 w-6" />
                  <div className="absolute -top-1 -right-1 h-3 w-3 bg-yellow-400 rounded-full"></div>
                </button>
                <div className="flex items-center space-x-3">
                  <div className="w-8 h-8 bg-yellow-400 rounded-full flex items-center justify-center">
                    <User className="h-5 w-5 text-gray-900" />
                  </div>
                  <div className="hidden md:block">
                    <p className="text-sm font-medium text-white">{userData.name}</p>
                    <p className="text-xs text-gray-400">Customer</p>
                  </div>
                </div>
              </div>
            </div>
          </header>

          {/* Main Content */}
          <main className="p-6">
            <div className="hidden lg:block">
              <DesktopOverviewTab />
            </div>
            <div className="lg:hidden">
              {renderTabContent()}
            </div>
          </main>

          {/* Footer */}
          <footer className="bg-gray-800 border-t border-gray-700 px-6 py-4 mt-8">
            <div className="text-center text-xs text-gray-500">
              <p>&copy; 2024 Olament. Digitizing Africa's Local Markets.</p>
              <p className="mt-1">Prepared by Godsibest Company Ltd</p>
            </div>
          </footer>
        </div>
      </div>

      {/* Mobile Layout */}
      <div className="lg:hidden">
        {/* Mobile Header */}
        <header className="bg-gray-800 border-b border-gray-700 px-4 py-4 sticky top-0 z-30">
          <div className="flex items-center justify-between">
            <h1 className="text-xl font-bold text-yellow-400">Olament</h1>
            <button className="relative p-2 text-gray-400 hover:text-white">
              <Bell className="h-5 w-5" />
              <div className="absolute -top-1 -right-1 h-2 w-2 bg-yellow-400 rounded-full"></div>
            </button>
          </div>
        </header>

        {/* Mobile Content */}
        <main className="p-4">
          {renderTabContent()}
        </main>

        {/* Mobile Bottom Navigation */}
        <BottomNav />
      </div>
    </div>
  );
};

export default Dashboard;